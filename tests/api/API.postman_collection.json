{
	"info": {
		"_postman_id": "4a57229c-ee23-4885-9f1a-b4d42acfb08a",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33c1a6f-b3a4-4ee9-8fbc-0fee7d5968d2",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"patata\",\n\t\"email\": \"test@test.com\",\n\t\"password\": \"1234\",\n\t\"name\": \"Test User\",\n\t\"surname\": \"Surname\",\n\t\"birthday\": \"1990-01-01\",\n\t\"gender\": \"male\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33c1a6f-b3a4-4ee9-8fbc-0fee7d5968d2",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"patata2\",\n\t\"email\": \"test2@test2.com\",\n\t\"password\": \"1234\",\n\t\"name\": \"Test User\",\n\t\"surname\": \"Surname\",\n\t\"birthday\": \"1990-01-01\",\n\t\"gender\": \"male\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/user",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33c1a6f-b3a4-4ee9-8fbc-0fee7d5968d2",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"",
							"// TODO: Check has access-token",
							"",
							"pm.environment.set(\"token\", json[\"access-token\"])",
							"pm.environment.set(\"user_id\", json.user[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@test.com\",\n\t\"password\": \"1234\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/session",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33c1a6f-b3a4-4ee9-8fbc-0fee7d5968d2",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"",
							"// TODO: Check has access-token",
							"",
							"pm.environment.set(\"token2\", json[\"access-token\"])",
							"pm.environment.set(\"user_id2\", json.user[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test2@test2.com\",\n\t\"password\": \"1234\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/session",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8269d348-be12-46e4-8769-f83fb6cfd570",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Default visibility is public\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.visibility).to.eql(\"public\");",
							"});",
							"var json = pm.response.json();",
							"pm.environment.set(\"post_id\", json[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"author-id\": \"{{user_id}}\",\n\t\"text\": \"Hello World\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post With Private Visibility",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8269d348-be12-46e4-8769-f83fb6cfd570",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Default visibility is public\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.visibility).to.eql(\"private\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"private_post_id\", jsonData[\"id\"])",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"author-id\": \"{{user_id}}\",\n\t\"text\": \"Hello World\",\n\t\"visibility\": \"private\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post With Logged In Visibility",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8269d348-be12-46e4-8769-f83fb6cfd570",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Default visibility is public\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.visibility).to.eql(\"loggedin\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"logged_post_id\", jsonData[\"id\"])",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"author-id\": \"{{user_id}}\",\n\t\"text\": \"Hello World\",\n\t\"visibility\": \"loggedin\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post With Public visiblity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8269d348-be12-46e4-8769-f83fb6cfd570",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Default visibility is public\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.visibility).to.eql(\"public\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"public_post_id\", jsonData[\"id\"])",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"author-id\": \"{{user_id}}\",\n\t\"text\": \"Hello World\",\n\t\"visibility\": \"public\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sitemap",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b8778f9-5b73-4c01-9df0-a985a31b51b0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is application/xml\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/xml\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/sitemap.xml",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"sitemap.xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post with tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e242ee78-3161-440c-aa57-5afada1027d8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post object contains tag\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tags).to.contain(\"#postmantest\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"author-id\": \"{{user_id}}\",\n\t\"text\": \"Hello World #postmantest\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search posts by tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5484227b-892f-4ae3-a98d-ecf531e1dcf3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Post object contains tag\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].tags).to.contain(\"#postmantest\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"tag\": \"postmantest\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/search",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5484227b-892f-4ae3-a98d-ecf531e1dcf3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\": \"test\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/search",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5484227b-892f-4ae3-a98d-ecf531e1dcf3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\": \"patata2\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/user/search",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"user",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Get Private Post without Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{private_post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{private_post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Get Logged Post without Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{logged_post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{logged_post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Get Public Post without Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{public_post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{public_post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Get Logged Post with Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{logged_post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{logged_post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Get Private Post with Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{private_post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{private_post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Get Newsfeed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db15a6e3-dbd7-459a-a75b-7a4917f5cccd",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}:{{port}}/post/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}"
					]
				},
				"description": "Not working?"
			},
			"response": []
		},
		{
			"name": "Add Reaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e9a9e4e-9663-4246-b4aa-a3204ba37176",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"reaction\" : \"like\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/{{post_id}}/reactions",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}",
						"reactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Reaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d79e4a2-5ed8-474b-8f22-7ff357449cf2",
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/{{post_id}}/reactions",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}",
						"reactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Comment",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\" : \"Primer comentario\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/{{post_id}}/comments",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Comments",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/{{post_id}}/comments",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Comment",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"comment_id\" : 2\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post/{{post_id}}/comments",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post",
						"{{post_id}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post With Social Card Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e242ee78-3161-440c-aa57-5afada1027d8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"API processed correct social image\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[\"image-url\"]).to.eql(\"https://static01.nyt.com/images/2018/03/20/business/00ZUCKTOWN-8/00ZUCKTOWN-8-facebookJumbo-v2.jpg\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\": \"Hey Mark, look at that: https://www.nytimes.com/2018/03/21/technology/facebook-zucktown-willow-village.html\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/post",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "291ccc54-3f20-4500-9de2-ee308400a7b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"group_id\", json[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"Test Group\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Group 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "291ccc54-3f20-4500-9de2-ee308400a7b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"group_id2\", json[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"Test Group 2\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Group To Remove",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "291ccc54-3f20-4500-9de2-ee308400a7b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"",
							"pm.environment.set(\"group_id_rem\", json[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"Test Delete Group\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get  Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "291ccc54-3f20-4500-9de2-ee308400a7b3",
						"exec": [
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "291ccc54-3f20-4500-9de2-ee308400a7b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"Test Group\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id_rem}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id_rem}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Group Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4068b886-57e0-4c97-8c8a-395900efab01",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"pm.environment.set(\"group_post_id\", json[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\" : \"Test group post\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Group Post To Remove",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4068b886-57e0-4c97-8c8a-395900efab01",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var json = pm.response.json();",
							"pm.environment.set(\"group_post_id_rem\", json[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\" : \"Test group post\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4068b886-57e0-4c97-8c8a-395900efab01",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4068b886-57e0-4c97-8c8a-395900efab01",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Group Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4068b886-57e0-4c97-8c8a-395900efab01",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"text\" : \"Test group post\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/posts/{{group_post_id_rem}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"posts",
						"{{group_post_id_rem}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group Members",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0819a47-74fe-4b4d-a9df-572eea843598",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group Admins",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2aa3eb2e-4c9c-4120-a9b1-c90b5bf8d4b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members/admins",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members",
						"admins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user to group",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69eaf26e-dbb0-4028-9d82-3234db4704d3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user_id\" : \"{{user_id2}}\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user to group 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69eaf26e-dbb0-4028-9d82-3234db4704d3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user_id\" : \"{{user_id}}\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id2}}/members",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id2}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login2 Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33c1a6f-b3a4-4ee9-8fbc-0fee7d5968d2",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"var json = pm.response.json();",
							"",
							"// TODO: Check has access-token",
							"",
							"pm.environment.set(\"groups_length\", json.user[\"groups\"].length);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test2@test2.com\",\n\t\"password\": \"1234\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/session",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change User2 to Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69eaf26e-dbb0-4028-9d82-3234db4704d3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user_id\" : \"{{user_id2}}\",\n\t\"admin\" : true\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group Admins Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2aa3eb2e-4c9c-4120-a9b1-c90b5bf8d4b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Role changed successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members/admins",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members",
						"admins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change User2 to Member",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69eaf26e-dbb0-4028-9d82-3234db4704d3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user_id\" : \"{{user_id2}}\",\n\t\"admin\" : false\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Group Admins Check Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2aa3eb2e-4c9c-4120-a9b1-c90b5bf8d4b3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Role changed successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members/admins",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members",
						"admins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove Group Member",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69eaf26e-dbb0-4028-9d82-3234db4704d3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/{{group_id}}/members/{{user_id2}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"{{group_id}}",
						"members",
						"{{user_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log invalid password login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "589a9346-c7d0-45fc-ab11-516a5e6ec51d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"test@test.com\",\n\t\"password\": \"invalid\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/session",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Login Log",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff1f7e93-6ddd-4cee-b374-22689b221797",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Login log returns non-empty list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.not.eql(0);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/login_logs",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"login_logs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add User Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c97ca788-c5bd-443a-828c-e83eca1df3a9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Put object contains image-url\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['image-url']).to.contain( \"https://imgflip.com/i/mi1ql\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"image-url\" : \"https://imgflip.com/i/mi1ql\"\n} "
				},
				"url": {
					"raw": "{{host}}:{{port}}/user",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit All User Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c97ca788-c5bd-443a-828c-e83eca1df3a9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Put object edited correctly\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['image-url']).to.contain( \"https://imgflip.com/i/mi1ql\")",
							"    pm.expect(jsonData['email']).to.contain( \"testt@test.com\")",
							"    pm.expect(jsonData['username']).to.contain( \"patataa\")",
							"    pm.expect(jsonData['name']).to.contain( \"Testt User\")",
							"    pm.expect(jsonData['surname']).to.contain( \"Surnamee\")",
							"    pm.expect(jsonData['birthday']).to.contain( \"Tue, 01 Jan 1991 00:00:00 GMT\")",
							"    pm.expect(jsonData['gender']).to.contain( \"female\")",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"image-url\" : \"https://imgflip.com/i/mi1ql\",\n\t\"username\": \"patataa\",\n\t\"email\": \"testt@test.com\",\n\t\"name\": \"Testt User\",\n\t\"surname\": \"Surnamee\",\n\t\"birthday\": \"1991-01-01\",\n\t\"gender\": \"female\"\n} "
				},
				"url": {
					"raw": "{{host}}:{{port}}/user",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "26e9259a-1a7a-459c-a710-070b8e1fc7af",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\": \"Test Group\"\n}"
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/group/search",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"group",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users Groups",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29cfb242-21a1-40aa-b122-4bedd1b635f5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"pm.test(\"Number of groups is 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/user/{{user_id}}/groups",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"user",
						"{{user_id}}",
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Shutdown API",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/shutdown",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"shutdown"
					]
				}
			},
			"response": []
}
	]
}
